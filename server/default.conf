upstream pgAdmin {
  server pgadmin:80;
 
  keepalive 32;
}

upstream web {
  server web:80;
 
  keepalive 32;
}

server {
	listen       80;
	server_name  download.fuakorm.com fuakorm.com;

    charset utf-8,gbk;  # 避免中文乱码

    location /download {
        alias  /var/data/download;
        sendfile on;
        autoindex on;
        autoindex_exact_size off;
        autoindex_localtime on;
        # root            /var/data/download/;
        # autoindex on;  # 开启目录文件列表
        # autoindex_exact_size on;  # 显示出文件的确切大小，单位是bytes
        # autoindex_localtime on;  # 显示的文件时间为文件的服务器时间

    }
}

server {
	
    # listen       80;
	listen       443;
	server_name  fuakorm.com www.fuakorm.com;
	
    #增加ssl
    ssl on;        #如果强制HTTPs访问，这行要打开
    ssl_certificate         /etc/nginx/cert/4808771_fuakorm.com.pem;#你的xxxx.pem文件名称
    ssl_certificate_key     /etc/nginx/cert/4808771_fuakorm.com.key;#你的xxxx.key文件名称

    ssl_session_cache    shared:SSL:1m;
    ssl_session_timeout  5m;

    ssl_protocols  SSLv2 SSLv3 TLSv1.2;# 指定密码为openssl支持的格式

    ssl_ciphers  HIGH:!aNULL:!MD5;  # 密码加密方式
    ssl_prefer_server_ciphers  on;   #依赖SSLv3和TLSv1协议的服务器密码将优先于客户端密码
    location /api/ {
        #这里需要说明一下,由于docker的网络问题,我们填127.0.0.1是不可行的
        #因为127.0.0.1是docker容器内的网络,不是我们宿主机的网络,所以就不能指向正确的路径
        #我们需要填内网的ip地址例如:192.168.1.222,这样才是可以行的
        proxy_set_header   Host             $host;
        proxy_set_header   X-Real-IP        $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass http://web/api/;

    }

    location / {
        #这里需要说明一下,由于docker的网络问题,我们填127.0.0.1是不可行的
        #因为127.0.0.1是docker容器内的网络,不是我们宿主机的网络,所以就不能指向正确的路径
        #我们需要填内网的ip地址例如:192.168.1.222,这样才是可以行的
        # proxy_set_header   Host             $host;
        # proxy_set_header   X-Real-IP        $remote_addr;
        # proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass http://pgAdmin;

    }
    error_page 404          /404.html;
}